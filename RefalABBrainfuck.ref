* Copyright 2025 Aleksandr Bocharov
* Distributed under the Boost Software License, Version 1.0.
* See accompanying file LICENSE_1_0.txt
* or copy at http://www.boost.org/LICENSE_1_0.txt
* 2025-04-21
* https://github.com/Aleksandr3Bocharov/RefalABBrainfuck

*====================================================================
* RefalABBrainfuck
*
* Программа "RefalABBrainfuck" написана
* на языке программирования РефалАБ.
* https://github.com/Aleksandr3Bocharov/RefalAB
*
* Интерпретатор языка программирования Brainfuck
* на РефалАБ.
*
* Программа "RefalABBrainfuck" интерпретирует 
* код на языке Brainfuck из исходного файла.
*====================================================================

RefalABBrainfuck +
    START
    ENTRY Go
    EXTRN Symbols, Tokenizer, Parser, Interpretator, Fails
    EXTRN Prout, Br, Dg, Map, Load_File, Exist_File
    EXTRN Platform, System, Arg, Exit, Empty
    EXTRN Windows, True, False
    EMPTY Lines, Parsing_Tree

Go      = <chcp_UTF8 <Platform>> <Help> +
        <Args (<Arg /1/>) <Arg /2/>> +
* Запуск лексического анализатора
        <If_Tokenizer <Tokenizer <Symbols <Dg /Lines/>>>>

* Смена кодовой страницы в Windows на UTF-8
chcp_UTF8
    /Windows/ +
        = <Empty <System 'chcp 65001'>> 
    E._ =

* Вывод справки
Help    = <Prout 'Интерпретатор языка ' +
            'программирования Brainfuck на РефалАБ.\n\n' +
            'Программа "RefalABBrainfuck" ' + 
            'интерпретирует код на языке Brainfuck ' +
            'из исходного файла.\n'>

Args    
    (E._) V.__ +
        = <Args_Error>
    ()  = <Args_Error>
    (E.FileName) +
        = <Open_File <Exist_File E.FileName> E.FileName>

Args_Error
        = <Prout 'FATAL_ERROR (9): ' +
            'Синтаксис - RefalABBrainfuck имя_файла'> +
        <Exit /9/>

Open_File
    /False/ E.FileName +
        = <Prout 'FATAL_ERROR (19): ' +
            'Исходный файл "' E.FileName '" не существует.'> +
        <Exit /19/>
    /True/ E.FileName +
        = <Prout 'Открытие исходного файла "' E.FileName '" ' +
            'с кодом на языке программирования ' +
            'Brainfuck.\n'> +
        <Br /Lines/ '=' <Load_File /0/ E.FileName>>

If_Tokenizer
* Если Fails, то завершение программы
    /Fails/ E.Errors +
        = <Prout 'FATAL_ERROR (99): ' +
            'Имеется одна или больше ' +
            'синтаксических ошибок.'> +
        <Map /Do_Prout_Line/ E.Errors> +
        <Exit /99/>
* Запуск синтаксического анализатора 
    E.Tokens +
        = <Br /Parsing_Tree/ '=' <Parser E.Tokens>> +
* Запуск интерпретатора
        <Prout 'Запуск интерпретатора кода ' +
            'на языке программирования Brainfuck.'> +
        <Interpretator <Dg /Parsing_Tree/>> <Prout>

Do_Prout_Line
    (E.Line) +
        = <Prout E.Line>

    END
